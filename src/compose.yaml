
services:
  catalogdb:
    image: postgres
    container_name: catalogdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: CatalogDb
    restart: always
    volumes:
      - postgres_catalog:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  basketdb:
    image: postgres
    container_name: basketdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: BasketDb
    restart: always
    volumes:
      - postgres_basket:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
        
  discountdb:
    image: postgres
    container_name: discountdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: DiscountDb
    restart: always
    volumes:
      - postgres_discount:/var/lib/postgresql/data/
    ports:
      - "5434:5432"
  
  distributedcache:
    image: redis
    container_name: distributedcache
    restart: always
    ports:
      - "6379:6379"
  
  orderdb:
    image: mcr.microsoft.com/mssql/server
    container_name: orderdb
    environment:
      SA_PASSWORD: "Password123"
      ACCEPT_EULA: Y
    restart: always
    volumes:
      - mssql_order:/var/lib/mssql/data
    ports:
      - "1433:1433"
  
  messagebroker:
    image: rabbitmq:management
    container_name: messagebroker
    hostname: tokoaz-mq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORT=8080
      - ASPNETCORE_HTTPS_PORT=8081
      - ConnectionStrings__Database=Server=catalogdb;Port=5432;Database=CatalogDb;User Id=postgres;Password=postgres;Include Error Detail=true
    depends_on:
      - catalogdb
    ports:
      - "6060:8081"
      - "6000:8080"
    volumes:
      # Maps a local directory for development
      - ./Services/Catalog/Catalog.API:/app
      # Maps another volume for additional data persistence (optional)
      - catalog_api_data:/data
  
  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Basket.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORT=8080
      - ASPNETCORE_HTTPS_PORT=8081
      - ConnectionStrings__Database=Server=basketdb;Port=5432;Database=BasketDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - ConnectionStrings__Redis=distributedcache:6379
      - GrpcSettings__DiscountUrl=http://discount.grpc:8080
      - MessageBroker__Host=amqp://tokoaz-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    depends_on:
      - basketdb
      - distributedcache
      - discount.grpc
      - messagebroker
    ports:
      - "6061:8081"
      - "6001:8080"
    volumes:
      - ./Basket.API:/app
      - basket_api_data:/data
        
  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Discount.gRPC/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORT=8080
      - ASPNETCORE_HTTPS_PORT=8081
      - ConnectionStrings__Database=Server=discountdb;Port=5432;Database=DiscountDb;User Id=postgres;Password=postgres;Include Error Detail=true
    depends_on:
      - discountdb
    ports:
      - "6002:8080"
      - "6062:8081"
    volumes:
      - ./Discount.gRPC:/app
      - discount_grpc_data:/data
        
  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: .
      dockerfile: Ordering.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORT=8080
      - ASPNETCORE_HTTPS_PORT=8081
      - ConnectionStrings__Database=Server=orderdb;Database=OrderDb;User Id=sa;Password=Password123;Encrypt=False;TrustServerCertificate=True
      - MessageBroker__Host=amqp://tokoaz-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
      - FeatureManagement__OrderFulfillment=false
    depends_on:
      - orderdb
      - messagebroker
    ports:
        - "6063:8081"
        - "6003:8080"
    volumes:
      - ./Ordering.API:/app
      - order_api_data:/data
        
  yarpapigateway:
    image: ${DOCKER_REGISTRY-}yarpapigateway
    build:
      context: .
      dockerfile: YarpApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORT=8080
      - ASPNETCORE_HTTPS_PORT=8081
      - CatalogBaseUrl=http://catalog.api:8080
      - BasketBaseUrl=http://basket.api:8080
      - DiscountBaseUrl=http://discount.grpc:8080
      - OrderingBaseUrl=http://ordering.api:8080
    depends_on:
      - catalog.api
      - basket.api
      - ordering.api
    ports:
      - "6064:8081"
      - "6004:8080"
    volumes:
      - ./YarpApiGateway:/app
      - yarp_api_gateway_data:/data

volumes:
  postgres_catalog:
  postgres_basket:
  postgres_discount:
  catalog_api_data:
  basket_api_data:
  discount_grpc_data:
  order_api_data:
  mssql_order:
  yarp_api_gateway_data:
  